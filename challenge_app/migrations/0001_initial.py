# Generated by Django 3.0.4 on 2021-02-05 13:15

import challenge_app.validators
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_daily_submission', models.PositiveIntegerField(verbose_name='Nombre de soumissions quotidienne max')),
                ('name', models.CharField(max_length=200, verbose_name='Titre')),
                ('description', models.CharField(max_length=2000)),
                ('is_classification', models.BooleanField(default=False)),
                ('tuto_python', models.CharField(blank=True, default=None, max_length=200, null=True, verbose_name='Tuto python')),
                ('tuto_r', models.CharField(blank=True, default=None, max_length=200, null=True, verbose_name='Tuto R')),
            ],
        ),
        migrations.CreateModel(
            name='FileCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_upload', models.DateTimeField(auto_now_add=True, verbose_name='Date du téléversement')),
                ('file_uploaded', models.FileField(upload_to='uploads/%Y/%m/%d/', validators=[challenge_app.validators.validate_file_code])),
            ],
            options={
                'verbose_name': 'Fichier de code',
                'verbose_name_plural': 'Fichiers de code',
            },
        ),
        migrations.CreateModel(
            name='FileCsv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_upload', models.DateTimeField(auto_now_add=True, verbose_name='Date du téléversement')),
                ('file_uploaded', models.FileField(upload_to='uploads/%Y/%m/%d/', validators=[challenge_app.validators.validate_file_csv])),
            ],
            options={
                'verbose_name': 'Fichier csv non téléchargeable',
                'verbose_name_plural': 'Fichiers csv non téléchargeables',
            },
        ),
        migrations.CreateModel(
            name='UserStudent',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Utilisateur',
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SubmissionCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count_daily', models.PositiveIntegerField(verbose_name='Nombre de soumissions du jour')),
                ('count_total', models.PositiveIntegerField(verbose_name='Nombre de soumissions totales')),
                ('Challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='challengecounted', to='challenge_app.Challenge')),
                ('UserStudent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student', to='challenge_app.UserStudent')),
            ],
            options={
                'verbose_name': 'Compteur de soumissions',
                'verbose_name_plural': 'Compteurs de soumissions',
            },
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_submission', models.DateTimeField(auto_now_add=True, verbose_name='Date de la soumission')),
                ('score', models.FloatField(null=True)),
                ('commentaire', models.CharField(max_length=2000)),
                ('challenge', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='challenge_app.Challenge')),
                ('code', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='challenge_app.FileCode')),
                ('file_submitted', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='challenge_app.FileCsv', verbose_name='Fichier de prédiction (csv)')),
                ('submitted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='challenge_app.UserStudent', verbose_name='Soumis par')),
            ],
            options={
                'verbose_name': 'Soumission',
            },
        ),
        migrations.CreateModel(
            name='FileCsvOpenUpload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_upload', models.DateTimeField(auto_now_add=True, verbose_name='Date du téléversement')),
                ('file_uploaded', models.FileField(upload_to='uploads_storage/%Y/%m/%d/', validators=[challenge_app.validators.validate_file_csv])),
                ('submitted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='challenge_app.UserStudent')),
            ],
            options={
                'verbose_name': 'Fichier téléchargeable',
                'verbose_name_plural': 'Fichiers csv téléchargeables',
            },
        ),
        migrations.AddField(
            model_name='filecsv',
            name='submitted_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='challenge_app.UserStudent'),
        ),
        migrations.AddField(
            model_name='filecode',
            name='submitted_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='challenge_app.UserStudent'),
        ),
        migrations.AddField(
            model_name='challenge',
            name='reference',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='challenge_ref', to='challenge_app.FileCsv', verbose_name='Prediction de référence'),
        ),
        migrations.AddField(
            model_name='challenge',
            name='test_input',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='challenge_input_test', to='challenge_app.FileCsvOpenUpload', verbose_name='Variable explicative de test'),
        ),
        migrations.AddField(
            model_name='challenge',
            name='training_input',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='challenge_input_train', to='challenge_app.FileCsvOpenUpload', verbose_name="Variables explicatives d'apprentissage"),
        ),
        migrations.AddField(
            model_name='challenge',
            name='training_output',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='challenge_output_train', to='challenge_app.FileCsvOpenUpload', verbose_name="Variable à expliquer d'apprentissage"),
        ),
        migrations.AddConstraint(
            model_name='submissioncount',
            constraint=models.UniqueConstraint(fields=('UserStudent', 'Challenge'), name='assoc'),
        ),
        migrations.AlterOrderWithRespectTo(
            name='submission',
            order_with_respect_to='challenge',
        ),
    ]
